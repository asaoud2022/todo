version: '3.9'
services:
  app:
    container_name: learning_container
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${DB_HOST}
      - DATABASE_PORT=${DB_PORT}
      - TEST_POSTGRES_USER=${TEST_DB_USER}
      - TEST_POSTGRES_PASSWORD=${TEST_DB_PASSWORD}
      - TEST_POSTGRES_DB=${TEST_DB_NAME}
      - TEST_DATABASE_HOST=${TEST_DB_HOST}
      - TEST_DATABASE_PORT=${TEST_DB_PORT}
    tty: true
    build: .
    ports:
      - 3001:3001
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - learning-postgres
    networks:
      - learning

  learning-postgres:
    image: postgres:latest
    container_name: postgres_container
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${DB_HOST}
    ports:
      - '5432:5432'
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    networks:
      - learning


pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_container
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      -  learning-postgre
    ports:
      - "5050:80"
    networks:
      - learning
    restart: unless-stopped

learning-postgres_test:
    image: postgres:latest
    container_name: learning-postgres
    environment:
      - POSTGRES_USER=${TEST_DB_USER}
      - POSTGRES_PASSWORD=${TEST_DB_PASSWORD}
      - POSTGRES_DB=${TEST_DB_NAME}
      - DATABASE_HOST=${TEST_DB_HOST}
    ports:
      - '4568:5440'
    volumes:
      - ./pg_data_test:/var/lib/postgresql/data
    networks:
      - learning

#volumes:
#  pg_data:
#  pg_data_test:

volumes:
  api:
  database_postgres:    

# Networks to be created to facilitate communication between containers
networks:
  learning:
    driver: bridge